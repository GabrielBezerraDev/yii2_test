version: '3.2'

services:

  frontend:
    build: frontend
    ports:
      - 20080:80
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
    - my-network

  backend:
    build: backend
    ports:
      - 21080:80
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
    - my-network

  db:
    image: mysql:5.7
    ports:
    - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: neymar
      MYSQL_DATABASE: yii2_test
      MYSQL_USER: neymar
      MYSQL_PASSWORD: neymar
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_unicode_ci']
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      my-network:
       ipv4_address: 172.20.0.3

  phpadmin:
    container_name: phpadmin_yii2
    image: phpmyadmin
    restart: always
    ports:
    - 8080:80
    environment:
      PMA_PORT: 3306
      PMA_PASSWORD: neymar
      PMA_USER: neymar
    networks:
      my-network:
  
  # web:
  #   image: nginx
  #   volumes:
  #   - ./templates:/etc/nginx/templates
  #   ports:
  #   - "8081:81"
  # environment:
  #  - NGINX_HOST=foobar.com
  #  - NGINX_PORT=80
  #pgsql:
  #  image: postgres:9.5
  #  environment:
  #    - POSTGRES_DB=yii2advanced
  #    - POSTGRES_USER=yii2advanced
  #    - POSTGRES_PASSWORD=secret

networks:
  my-network:
    ipam:
      config:
        - subnet: 172.20.0.0/16
